<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>problem on Janny</title>
    <link>https://jannyluo.github.io/categories/problem/</link>
    <description>Recent content in problem on Janny</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Jun 2020 14:17:16 +0800</lastBuildDate>
    
	<atom:link href="https://jannyluo.github.io/categories/problem/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Life</title>
      <link>https://jannyluo.github.io/posts/life/</link>
      <pubDate>Fri, 19 Jun 2020 14:17:16 +0800</pubDate>
      
      <guid>https://jannyluo.github.io/posts/life/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Webpack打包报错module not found</title>
      <link>https://jannyluo.github.io/post/webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99module/</link>
      <pubDate>Thu, 18 Jun 2020 22:40:55 +0800</pubDate>
      
      <guid>https://jannyluo.github.io/post/webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99module/</guid>
      <description> 刚接触webpack 使用命令webpack ./src/main.js ./dist/bundle.js打包时报错如下：   后查资料发现是因为版本过高，
成功的打包命令是： webpack ./src/main.js -o ./dist/bundle.js
 打包成功的截图： version版本号：4.43.0  </description>
    </item>
    
    <item>
      <title>直接输入webpack打包报错Insufficient number of arguments or no entry found. </title>
      <link>https://jannyluo.github.io/post/%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%85%A5webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99insufficient/</link>
      <pubDate>Thu, 18 Jun 2020 22:37:47 +0800</pubDate>
      
      <guid>https://jannyluo.github.io/post/%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%85%A5webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99insufficient/</guid>
      <description> webpack version：4.43.0*  问题： 直接在项目下输入webpack打包报错
Insufficient number of arguments or no entry found.
解决方法：  首先在项目根目录下创建名为：webpack.config.js文件  在创建的webpack.config.js文件编辑如下代码 注意： 修改代码的入口/出口文件的路径和要输出的文件名称  const path = require(&amp;#39;path&amp;#39;) module.exports = { //指定入口，表示webpack要打包哪个文件  entry: path.join(__dirname,&amp;#39;./src/main.js&amp;#39;), //指定出口，表示打包好的文件输出到哪个目录  output:{ path:path.join(__dirname,&amp;#39;./dist&amp;#39;), //指定输出文件的名称  filename:&amp;#39;bundle1.js&amp;#39; } }  保存后重新在terminal输入webpack成功打包：*   </description>
    </item>
    
    <item>
      <title>Webpack4.43.0安装bable-loader步骤</title>
      <link>https://jannyluo.github.io/post/webpack4.43.0%E5%AE%89%E8%A3%85babel-loader%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Thu, 18 Jun 2020 17:55:55 +0800</pubDate>
      
      <guid>https://jannyluo.github.io/post/webpack4.43.0%E5%AE%89%E8%A3%85babel-loader%E6%AD%A5%E9%AA%A4/</guid>
      <description>运行打包时报错如下： webpack version：4.43.0
由于在webpack中默认只能处理部分ES6的语法，要借助第三方loader来帮助webpack将高级的语法转换成低级的语法
首先要安装的三个：babel-loader、babel-core、babel-preset-env
 安装babel-loader（不要把babel打成bable！！！！！！）  npm i babel-loader -D 安装babel-core  npm install -D babel-core 安装babel-preset-env  npm install -D babel-preset-env 这三个包安装好之后在项目的根目录创建一个./babelrc文件， ./babelrc的配置：  { &amp;#34;presets&amp;#34;: [&amp;#34;env&amp;#34;] } 在webpack.config.js中的module对象的rules属性添加一项：  {test:/\.js$/,use:&amp;#39;babel-loader&amp;#39;,exclude:&amp;#39;/node_modules/&amp;#39;} 保存运行截图 提示还需要两个插件才能正常的运行 安装需要的两个插件  npm i @babel/plugin-proposal-class-properties npm i @babel/plugin-syntax-class-properties 安装完毕之后在./babelrc中添加配置  { &amp;#34;presets&amp;#34;: [&amp;#34;env&amp;#34;], &amp;#34;plugins&amp;#34;: [&amp;#34;@babel/plugin-proposal-class-properties&amp;#34;,&amp;#34;@babel/plugin-syntax-class-properties&amp;#34;] } 保存重新运行之后可以成功打包。   </description>
    </item>
    
  </channel>
</rss>